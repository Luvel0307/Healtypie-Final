"use strict";(()=>{var e={};e.id=427,e.ids=[427],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8169:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>M,patchFetch:()=>g,requestAsyncStorage:()=>v,routeModule:()=>f,serverHooks:()=>b,staticGenerationAsyncStorage:()=>h});var a={};t.r(a),t.d(a,{GET:()=>d,POST:()=>c,dynamic:()=>l});var i=t(9182),o=t(2007),n=t(6719),s=t(3442);function m(e,r,t=101){let a=(r-e)/(t-1);return Array.from({length:t},(r,t)=>e+t*a)}function u(e,r){switch(r.tipo){case"trapmf":return function(e,r){let[t,a,i,o]=r;return e<=t||e>=o?0:e>=a&&e<=i?1:e>t&&e<a?(e-t)/(a-t):e>i&&e<o?(o-e)/(o-i):0}(e,r.parametros);case"trimf":return function(e,r){let[t,a,i]=r;return e<=t||e>=i?0:e===a?1:e>t&&e<a?(e-t)/(a-t):e>a&&e<i?(i-e)/(i-t):0}(e,r.parametros);default:return 0}}var p=t(5970);let l="force-dynamic";async function c(e){try{let{nombre:r,sensibilidad:t,tiempoEvolucion:a,controlGlucemico:i,secrecion:o,eritema:n,areaLesion:l,desvEstR:c,mediaR:d,mediaG:f,mediaB:v,cloudStoragePath:h}=await e.json();if(!r||0===r.trim().length)return s.NextResponse.json({error:"El nombre del paciente es requerido"},{status:400});if(t<0||t>6)return s.NextResponse.json({error:"La sensibilidad debe estar entre 0 y 6"},{status:400});if(a<0||a>35)return s.NextResponse.json({error:"El tiempo de evoluci\xf3n debe estar entre 0 y 35 d\xedas"},{status:400});if(i<5||i>12)return s.NextResponse.json({error:"El control gluc\xe9mico debe estar entre 5 y 12"},{status:400});let b=await p._.paciente.findFirst({where:{nombre:r.trim()}});b||(b=await p._.paciente.create({data:{nombre:r.trim()}}));let M=await p._.evaluacion.findFirst({where:{pacienteId:b.id},orderBy:{fechaHora:"desc"}}),g=function(e,r,t,a,i,o,n){let s,p;let l=function(){let e={Sensibilidad:{nombre:"Sensibilidad",universo:m(0,6),funcionesMembresia:{Normal:{tipo:"trapmf",parametros:[4,5,6,6]},Disminuida:{tipo:"trapmf",parametros:[1,2,4,5]},Ausente:{tipo:"trapmf",parametros:[0,0,1,2]}}},Area:{nombre:"Area",universo:m(0,4),funcionesMembresia:{Pequena:{tipo:"trapmf",parametros:[0,0,.3,.7]},Mediana:{tipo:"trapmf",parametros:[.5,1,1.5,2]},Grande:{tipo:"trapmf",parametros:[1.8,2.5,4,4]}}},DesvEstR:{nombre:"DesvEstR",universo:m(0,4),funcionesMembresia:{Baja:{tipo:"trapmf",parametros:[0,0,1,1.5]},Media:{tipo:"trapmf",parametros:[1.2,1.5,2.5,2.8]},Alta:{tipo:"trapmf",parametros:[2.3,2.5,4,4]}}},Secrecion:{nombre:"Secrecion",universo:m(0,1),funcionesMembresia:{No:{tipo:"trapmf",parametros:[0,0,.4,.6]},Si:{tipo:"trapmf",parametros:[.4,.6,1,1]}}},Eritema:{nombre:"Eritema",universo:m(0,1),funcionesMembresia:{No:{tipo:"trapmf",parametros:[0,0,.4,.6]},Si:{tipo:"trapmf",parametros:[.4,.6,1,1]}}},TiempoEvol:{nombre:"TiempoEvol",universo:m(0,35),funcionesMembresia:{Reciente:{tipo:"trapmf",parametros:[0,0,5,7]},Intermedio:{tipo:"trapmf",parametros:[6,8,20,22]},Prolongado:{tipo:"trapmf",parametros:[20,22,35,35]}}},ControlGlu:{nombre:"ControlGlu",universo:m(5,12),funcionesMembresia:{Bueno:{tipo:"trapmf",parametros:[5,5,6.5,7]},Regular:{tipo:"trapmf",parametros:[6.8,7,8.5,8.7]},Malo:{tipo:"trapmf",parametros:[8.5,9,12,12]}}},Riesgo:{nombre:"Riesgo",universo:m(1,3),funcionesMembresia:{Bajo:{tipo:"trimf",parametros:[1,1.3,2]},Moderado:{tipo:"trimf",parametros:[1.6,2,2.4]},Alto:{tipo:"trimf",parametros:[2.1,2.5,3]}}}},r=[["Normal","Disminuida","Ausente"],["Pequena","Mediana","Grande"],["Baja","Media","Alta"],["No","Si"],["No","Si"],["Reciente","Intermedio","Prolongado"],["Bueno","Regular","Malo"]],t=["Bajo","Moderado","Alto"],a=[];return["3 3 0 0 0 0 0, 3","0 0 0 2 2 0 0, 3","0 0 3 0 0 0 3, 3","0 3 0 0 0 3 0, 3","2 2 0 0 0 0 0, 2","2 0 2 0 0 0 0, 2","1 1 0 1 0 0 0, 1","1 0 1 0 1 0 0, 1","0 1 0 0 0 1 0, 1","1 0 0 0 0 0 0, 1"].forEach(e=>{let i=e.split(",");if(i.length<2)return;let o=i[0].trim().split(" ").map(e=>parseInt(e)),n=parseInt(i[1].trim())-1,s={},m=["Sensibilidad","Area","DesvEstR","Secrecion","Eritema","TiempoEvol","ControlGlu"];o.forEach((e,t)=>{if(e>0){let a=m[t],i=r[t][e-1];s[a]=i}}),Object.keys(s).length>0&&a.push({antecedentes:s,consecuente:t[n],peso:1})}),{variables:e,reglas:a}}(),c=Math.max(1,Math.min(3,function(e,r){let t=r.variables.Riesgo.universo,a=r.variables.Riesgo.funcionesMembresia,i=[],o=[];r.reglas.forEach(t=>{let a=1;Object.entries(t.antecedentes).forEach(([t,i])=>{let o=e[t];if(void 0!==o){let e=u(o,r.variables[t].funcionesMembresia[i]);a=Math.min(a,e)}}),i.push(a*t.peso),o.push(t.consecuente)});let n=0,s=0;return t.forEach(e=>{let r=0;i.forEach((t,i)=>{let n=Math.min(t,u(e,a[o[i]]));r=Math.max(r,n)}),n+=e*r,s+=r}),s>0?n/s:2}({Sensibilidad:Math.max(0,Math.min(6,e)),Area:Math.max(0,Math.min(4,r)),DesvEstR:Math.max(0,Math.min(4,t)),Secrecion:a?1:0,Eritema:i?1:0,TiempoEvol:Math.max(0,Math.min(35,o)),ControlGlu:Math.max(5,Math.min(12,n))},l)));return c<1.6?(s="BAJO",p="verde"):c<2.1?(s="MODERADO",p="amarillo"):(s="ALTO",p="rojo"),{riesgo:c,nivelRiesgo:s,semaforoColor:p}}(t,l,c,o,n,a,i),R="",E="";if(M){let e=l-M.areaLesion,r=c-M.desvEstR;R=`(${e>=0?"+":""}${e.toFixed(2)})`,E=`(${r>=0?"+":""}${r.toFixed(2)})`}let x=await p._.evaluacion.create({data:{pacienteId:b.id,sensibilidad:t,tiempoEvolucion:a,controlGlucemico:i,secrecion:o,eritema:n,areaLesion:l,desvEstR:c,mediaR:d,mediaG:f,mediaB:v,cloudStoragePath:h,riesgo:g.riesgo,nivelRiesgo:g.nivelRiesgo,semaforoColor:g.semaforoColor,evolArea:R,evolDesv:E}});return s.NextResponse.json({success:!0,evaluacion:{...x,riesgo:Number(x.riesgo),areaLesion:Number(x.areaLesion),desvEstR:Number(x.desvEstR),mediaR:Number(x.mediaR),mediaG:Number(x.mediaG),mediaB:Number(x.mediaB)},paciente:b})}catch(e){return console.error("Error creating evaluation:",e),s.NextResponse.json({error:"Error interno del servidor"},{status:500})}}async function d(e){try{let r;let{searchParams:t}=new URL(e.url),a=t.get("pacienteId"),i=t.get("nombre");if(a)r=await p._.evaluacion.findMany({where:{pacienteId:parseInt(a)},include:{paciente:!0},orderBy:{fechaHora:"desc"}});else if(i){let e=await p._.paciente.findFirst({where:{nombre:i.trim()}});if(!e)return s.NextResponse.json({evaluaciones:[]});r=await p._.evaluacion.findMany({where:{pacienteId:e.id},include:{paciente:!0},orderBy:{fechaHora:"desc"}})}else r=await p._.evaluacion.findMany({include:{paciente:!0},orderBy:{fechaHora:"desc"},take:50});let o=r.map(e=>({...e,riesgo:Number(e.riesgo),areaLesion:Number(e.areaLesion),desvEstR:Number(e.desvEstR),mediaR:Number(e.mediaR),mediaG:Number(e.mediaG),mediaB:Number(e.mediaB)}));return s.NextResponse.json({evaluaciones:o})}catch(e){return console.error("Error fetching evaluations:",e),s.NextResponse.json({error:"Error interno del servidor"},{status:500})}}let f=new i.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/evaluaciones/route",pathname:"/api/evaluaciones",filename:"route",bundlePath:"app/api/evaluaciones/route"},resolvedPagePath:"/home/ubuntu/sistema_pie_diabetico/app/app/api/evaluaciones/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:v,staticGenerationAsyncStorage:h,serverHooks:b}=f,M="/api/evaluaciones/route";function g(){return(0,n.patchFetch)({serverHooks:b,staticGenerationAsyncStorage:h})}},5970:(e,r,t)=>{t.d(r,{_:()=>o});let a=require("@prisma/client");class i{getClient(){return this.client||(this.client=new a.PrismaClient({log:["error"]})),this.client}constructor(){this.client=null}}let o=new i().getClient()}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[372,609],()=>t(8169));module.exports=a})();